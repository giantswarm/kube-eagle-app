apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "kube-eagle.fullname" . }}
  labels:
    {{- include "labels.common" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "labels.selector" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ .Values.service.port | quote }}
        prometheus.io/path: "/metrics"
        giantswarm.io/monitoring: "true"
        giantswarm.io/monitoring-path: "/metrics"
        giantswarm.io/monitoring-port: {{ .Values.service.port | quote }}
      labels:
        {{- include "labels.common" . | nindent 8 }}
    spec:
      {{- if .Values.podSecurityContext }}
      securityContext:
{{ toYaml .Values.podSecurityContext | indent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccountName }}
{{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
{{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.containerSecurityContext }}
          securityContext:
{{ toYaml .Values.containerSecurityContext | indent 12 }}
          {{- end }}
          {{- if (.Values.Installation) }}
          image: "{{ .Values.Installation.V1.Registry.Domain }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{ else }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{ end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: TELEMETRY_HOST
              value: {{ .Values.telemetry.host | quote }}
            - name: TELEMETRY_PORT
              value: {{ .Values.telemetry.port | quote }}
            - name: METRICS_NAMESPACE
              value: {{ .Values.metricsNamespace | quote }}
            - name: LOG_LEVEL
              value: {{ .Values.logLevel | quote }}
{{- if .Values.env }}
{{- with .Values.env }}
    {{- toYaml . | nindent 12 }}
{{- end }}
{{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            httpGet:
              path: /health
              port: http
          readinessProbe:
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            httpGet:
              path: /health
              port: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}